<project name="h5o-chrome" default="debug" basedir=".">
    
    <!-- BUILD TOOLS -->
    <property description="Files for parsing etc." name="BUILD_DIR" value="../build" />
    <!-- // To not use svn
    <taskdef resource="org/tigris/subversion/svnant/svnantlib.xml">
        <classpath>
            <fileset dir="${BUILD_DIR}/svnant-1.3.0/lib" includes="**/*.jar" />
        </classpath>
    </taskdef>
    -->

    <!-- SETUP -->
 
    <property description="Source Folder" name="SRC_DIR" value="src"  />
    <loadfile description="Release version" property="RELEASE_VERSION" srcfile="../version.txt" />

    <!-- // To not use svn
    <svn>
        <status path="${basedir}" revisionProperty="svn.revision" />
    </svn>
    <echo>Sandbox Revision: ${svn.revision}</echo>
    <property description="Full build version" name="VERSION" value="${RELEASE_VERSION}.${svn.revision}"  />
    -->
    <property description="Full build version" name="VERSION" value="${RELEASE_VERSION}"  />
    
    <property description="Folder for completed build" name="DIST_DIR" value="./dist" />
    <property name="DEBUG_DIR" value="${DIST_DIR}/html5outlinerExt.${VERSION}" />

    <!-- MAIN -->
    <target name="debug" description="Debug H5O for Chrome build">
        <echo message="Building unpacked extension" />
        <mkdir dir="${DIST_DIR}" />
        <mkdir dir="${DEBUG_DIR}" />
        
        <subant target="debug" buildpath="../h5o-js" />
        <copy file="../h5o-js/dist/outliner.debug.js" tofile="${DEBUG_DIR}/outliner.debug.js" />
        
        <copy file="${SRC_DIR}/manifest.json" tofile="${DEBUG_DIR}/manifest.json" />
        <replace token="@VERSION" value="${VERSION}" file="${DEBUG_DIR}/manifest.json" />

        <copy todir="${DEBUG_DIR}/img">
            <fileset dir="${SRC_DIR}/img">
                <include name="*.png" />
            </fileset>
        </copy>
        <copy file="${SRC_DIR}/background.js" tofile="${DEBUG_DIR}/background.js" />
        <copy file="${SRC_DIR}/popup.html" tofile="${DEBUG_DIR}/popup.html" />
        <copy file="${SRC_DIR}/popup.js" tofile="${DEBUG_DIR}/popup.js" />
        <copy file="MIT-LICENSE.txt" tofile="${DEBUG_DIR}/MIT-LICENSE.txt" />
        <concat destfile="${DEBUG_DIR}/createOutline.js">
            <fileset dir="${DEBUG_DIR}" includes="outliner.debug.js" />
            <fileset dir="${SRC_DIR}" includes="createOutline.js" />
        </concat>

        <delete file="${DEBUG_DIR}/outliner.debug.js"/>
        
        <echo message="Unpacked extension built." />
    </target>
 
    <target name="clean">
        <delete dir="${DIST_DIR}" />
    </target>
 
    <target name="all" depends="clean,debug">
        <echo message="Build complete." />
    </target>
    
    <target name="release" depends="all">
        <zip destfile="${DIST_DIR}/outliner.${VERSION}.zip" basedir="${DEBUG_DIR}" includes="**/*" />
    </target>
 
</project>
